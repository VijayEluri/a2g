package com.k_int.a2g;

import spock.lang.Specification
import spock.lang.Unroll
import java.io.InputStream

import com.k_int.a2g.AsnCodec;

class BERDumpSpec extends Specification {

  def "test BERDump"() {
    when:

      InputStream useful_definition_is = this.getClass().getResourceAsStream('/AsnUseful.asn')
      InputStream z3950_definition_is = this.getClass().getResourceAsStream('/z3950v3.asn')

      // Load the example APDUs generated by yaz-client - these are BER encoded APDUs 1 per file
      InputStream init_request_ber_is = this.getClass().getResourceAsStream('/apdus/init_request.raw')
      InputStream init_response_ber_is = this.getClass().getResourceAsStream('/apdus/init_request.raw')
      InputStream search_request_ber_is = this.getClass().getResourceAsStream('/apdus/search_request.raw')
      InputStream search_response_ber_is = this.getClass().getResourceAsStream('/apdus/search_response.raw')
      InputStream present_request_ber_is = this.getClass().getResourceAsStream('/apdus/present_request.raw')
      InputStream present_response_ber_is = this.getClass().getResourceAsStream('/apdus/present_response.raw')

    then:
      // Get the codec
      AsnCodec asn_codec = new AsnCodec();
      // Load useful and z3950
      asn_codec.registerDefinitions(useful_definition_is)
      asn_codec.registerDefinitions(z3950_definition_is)

      com.k_int.a2g.base.BaseDecoder der_decoder = new com.k_int.a2g.base.DERDecoder(init_request_ber_is);
      Map init_req = asn_codec.decode('Z39-50-APDU-1995','PDU',der_decoder)
      
    expect:
      // init_req should be a map containing 1 element initRequest which is the choice element for the init request APDU
      println(init_req);
      1==1
  }

}
